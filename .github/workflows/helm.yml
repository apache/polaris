#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Helm tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  helm-tests:
    name: Helm tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'v3.16.0'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} --chart-dirs helm)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run 'helm template' validation
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          cd helm/polaris
          for f in values.yaml ci/*.yaml; do
            echo "::group::helm template $f"
            helm template --debug --namespace polaris-ns --values $f .
            echo "::endgroup::"
          done

      - name: Run Helm unit tests
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git || true
          helm unittest helm/polaris

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --debug --charts ./helm/polaris

      - name: Set up Minikube
        if: steps.list-changed.outputs.changed == 'true'
        uses: medyagh/setup-minikube@v0.0.18

      - name: Docker build
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          eval $(minikube docker-env)
          docker build -f ./Dockerfile \
            --build-arg ECLIPSELINK=true \
            --build-arg ECLIPSELINK_DEPS=com.h2database:h2:2.3.232 \
            -t polaris:latest .

      - name: Install fixtures
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace polaris-ns
          kubectl apply --namespace polaris-ns $(find helm/polaris/ci/fixtures -name "*.yaml" -exec echo -n "-f {} " \;) 

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct install --target-branch ${{ github.event.repository.default_branch }} \
            --namespace polaris-ns \
            --helm-extra-set-args "--set=image.repository=polaris --set=image.tag=latest" \
            --debug --charts ./helm/polaris
