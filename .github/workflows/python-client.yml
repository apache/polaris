#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Python project with Poetry and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-python

name: Python Client CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout Polaris project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up JDK for Gradle
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run regeneratePythonClient
        run: ./gradlew regeneratePythonClient

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install --user --upgrade -r regtests/requirements.txt

      # TODO: add cache for poetry dependencies once we have poetry.lock in the repo
      - name: Install dependencies
        working-directory: client/python
        run: poetry install --all-extras

      - name: Lint
        working-directory: client/python
        run: |
          make lint

      - name: Generated Client Tests
        working-directory: client/python
        run: |
          export SCRIPT_DIR="non-existing-mock-directory"
          poetry run pytest test/

      - name: Image build
        run: |
          ./gradlew \
              :polaris-quarkus-server:assemble \
              :polaris-quarkus-server:quarkusAppPartsBuild --rerun \
              -Dquarkus.container-image.build=true

      - name: Integration Tests
        working-directory: client/python
        run: |
          make test-integration
