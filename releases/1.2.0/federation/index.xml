<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Federation on Apache Polaris</title><link>https://polaris.apache.org/releases/1.2.0/federation/</link><description>Recent content in Federation on Apache Polaris</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://polaris.apache.org/releases/1.2.0/federation/index.xml" rel="self" type="application/rss+xml"/><item><title>Iceberg REST Federation</title><link>https://polaris.apache.org/releases/1.2.0/federation/iceberg-rest-federation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/1.2.0/federation/iceberg-rest-federation/</guid><description>Polaris can federate an external Iceberg REST catalog (e.g., another Polaris deployment, AWS Glue, or a custom Iceberg REST implementation), enabling a Polaris service to access table and view entities managed by remote Iceberg REST Catalogs.
Runtime requirements REST endpoint: The remote service must expose the Iceberg REST specification. Configure firewalls so Polaris can reach the base URI you provide in the connection config. Authentication: Polaris forwards requests using the credentials defined in ConnectionConfigInfo.</description></item><item><title>Hive Metastore Federation</title><link>https://polaris.apache.org/releases/1.2.0/federation/hive-metastore-federation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/1.2.0/federation/hive-metastore-federation/</guid><description>Polaris can federate catalog operations to an existing Hive Metastore (HMS). This lets an external HMS remain the source of truth for table metadata while Polaris brokers access, policies, and multi-engine connectivity.
Build-time enablement The Hive factory is packaged as an optional extension and is not baked into default server builds. Include it when assembling the runtime or container images by setting the NonRESTCatalogs Gradle property to include HIVE (and any other non-REST backends you need):</description></item></channel></rss>