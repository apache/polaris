{{/*
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
 
   http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
*/}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "polaris.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "polaris.labels" . | nindent 4 }}
    {{- if .Values.configMapLabels }}
    {{- tpl (toYaml .Values.configMapLabels) . | nindent 4 }}
    {{- end }}
data:
  application.properties: |-
    {{- $map := dict -}}
    {{- $global := . -}}

    {{- /* Realm Context */ -}}
    {{- $_ := set $map "polaris.realm-context.type" .Values.realmContext.type -}}
    {{- $_ =  set $map "polaris.realm-context.realms" (join "," .Values.realmContext.realms) -}}

    {{- /* Features */ -}}
    {{- range $k, $v := .Values.features -}}
    {{- if ( ne $k "realmOverrides" ) -}}
    {{- $_ = set $map (printf "polaris.features.\"%s\"" $k) (toJson $v) -}}
    {{- end -}}
    {{- end -}}
    {{- range $realm, $overrides := .Values.features.realmOverrides -}}
    {{- range $k, $v := $overrides -}}
    {{- $_ = set $map (printf "polaris.features.realm-overrides.\"%s\".\"%s\"" $realm $k) (toJson $v) -}}
    {{- end -}}
    {{- end -}}

    {{- /* Persistence */ -}}
    {{- $_ = set $map "polaris.persistence.type" .Values.persistence.type -}}

    {{- /* File IO */ -}}
    {{- $_ = set $map "polaris.file-io.type" .Values.fileIo.type -}}

    {{- /* Storage */ -}}
    {{- if .Values.storage.secret.gcpTokenLifespan -}}
    {{- $_ = set $map "polaris.storage.gcp.lifespan" .Values.storage.secret.gcpTokenLifespan -}}
    {{- end -}}

    {{- /* Rate Limiter */ -}}
    {{- $_ = set $map "polaris.rate-limiter.filter.type" .Values.rateLimiter.type -}}
    {{- if ne .Values.rateLimiter.type "no-op" -}}
    {{- $_ = set $map "polaris.rate-limiter.token-bucket.type" .Values.rateLimiter.tokenBucket.type -}}
    {{- $_ = set $map "polaris.rate-limiter.token-bucket.requests-per-second" .Values.rateLimiter.tokenBucket.requestsPerSecond -}}
    {{- $_ = set $map "polaris.rate-limiter.token-bucket.window" .Values.rateLimiter.tokenBucket.window -}}
    {{- end -}}

    {{- /* Tasks */ -}}
    {{- if .Values.tasks.maxConcurrentTasks -}}
    {{- $_ = set $map "polaris.tasks.max-concurrent-tasks" .Values.tasks.maxConcurrentTasks -}}
    {{- end -}}
    {{- if .Values.tasks.maxQueuedTasks -}}
    {{- $_ = set $map "polaris.tasks.max-queued-tasks" .Values.tasks.maxQueuedTasks -}}
    {{- end -}}

    {{- /* Authentication */ -}}
    {{- include "polaris.authenticationOptions" (list "" $map .Values.authentication $global) -}}
    {{- range $realm, $overrides := .Values.authentication.realmOverrides -}}
    {{- include "polaris.authenticationOptions" (list $realm $map $overrides $global) -}}
    {{- end -}}

    {{- /* OIDC */ -}}
    {{- if .Values.oidc.authServeUrl -}}
    {{- $_ = set $map "quarkus.oidc.tenant-enabled" "true" -}}
    {{- $_ = set $map "quarkus.oidc.auth-server-url" .Values.oidc.authServeUrl -}}
    {{- $_ = set $map "quarkus.oidc.client-id" .Values.oidc.client.id -}}
    {{- $_ = set $map "polaris.oidc.principal-mapper.type" .Values.oidc.principalMapper.type -}}
    {{- if .Values.oidc.principalMapper.idClaimPath -}}
    {{- $_ = set $map "polaris.oidc.principal-mapper.id-claim-path" .Values.oidc.principalMapper.idClaimPath -}}
    {{- end -}}
    {{- if .Values.oidc.principalMapper.nameClaimPath -}}
    {{- $_ = set $map "polaris.oidc.principal-mapper.name-claim-path" .Values.oidc.principalMapper.nameClaimPath -}}
    {{- end -}}
    {{- $_ = set $map "polaris.oidc.principal-roles-mapper.type" .Values.oidc.principalRolesMapper.type -}}
    {{- if .Values.oidc.principalRolesMapper.rolesClaimPath -}}
    {{- $_ = set $map "quarkus.oidc.roles.role-claim-path" .Values.oidc.principalRolesMapper.rolesClaimPath -}}
    {{- end -}}
    {{- if .Values.oidc.principalRolesMapper.filter -}}
    {{- $_ = set $map "polaris.oidc.principal-roles-mapper.filter" .Values.oidc.principalRolesMapper.filter -}}
    {{- end -}}
    {{- range $i, $mapping := .Values.oidc.principalRolesMapper.mappings -}}
    {{- $_ = set $map (printf "polaris.oidc.principal-roles-mapper.mappings[%d].regex" $i) $mapping.regex -}}
    {{- $_ = set $map (printf "polaris.oidc.principal-roles-mapper.mappings[%d].replacement" $i) $mapping.replacement -}}
    {{- end -}}
    {{- end -}}

    {{- /* HTTP ports */ -}}
    {{- $_ = set $map "quarkus.http.port" (get (first .Values.service.ports) "port") -}}
    {{- $_ = set $map "quarkus.management.port" (get (first .Values.managementService.ports) "port") -}}

    {{- /* CORS */ -}}
    {{- if .Values.cors.allowedOrigins -}}
    {{- $_ = set $map "quarkus.http.cors.origins" (join "," .Values.cors.allowedOrigins) -}}
    {{- end -}}
    {{- if .Values.cors.allowedMethods -}}
    {{- $_ = set $map "quarkus.http.cors.methods" (join "," .Values.cors.allowedMethods) -}}
    {{- end -}}
    {{- if .Values.cors.allowedHeaders -}}
    {{- $_ = set $map "quarkus.http.cors.headers" (join "," .Values.cors.allowedHeaders) -}}
    {{- end -}}
    {{- if .Values.cors.exposedHeaders -}}
    {{- $_ = set $map "quarkus.http.cors.exposed-headers" (join "," .Values.cors.exposedHeaders) -}}
    {{- end -}}
    {{- if .Values.cors.accessControlMaxAge -}}
    {{- $_ = set $map "quarkus.http.cors.access-control-max-age" .Values.cors.accessControlMaxAge -}}
    {{- end -}}
    {{- if ne .Values.cors.accessControlAllowCredentials nil -}}
    {{- $_ = set $map "quarkus.http.cors.access-control-allow-credentials" .Values.cors.accessControlAllowCredentials -}}
    {{- end -}}

    {{- /* Logging */ -}}
    {{- $_ = set $map "quarkus.log.level" .Values.logging.level -}}
    {{- if .Values.logging.console.enabled -}}
    {{- $_ = set $map "quarkus.log.console.enable" "true" -}}
    {{- $_ = set $map "quarkus.log.console.level" .Values.logging.console.threshold -}}
    {{- if .Values.logging.console.json -}}
    {{- $_ = set $map "quarkus.log.console.json" "true" -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.log.console.format" .Values.logging.console.format -}}
    {{- end -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.log.console.enable" "false" -}}
    {{- end -}}
    {{- if .Values.logging.file.enabled -}}
    {{- $_ = set $map "quarkus.log.file.enable" "true" -}}
    {{- $_ = set $map "quarkus.log.file.level" .Values.logging.file.threshold -}}
    {{- $_ = set $map "quarkus.log.file.path" (printf "%s/%s" .Values.logging.file.logsDir .Values.logging.file.fileName) -}}
    {{- $_ = set $map "quarkus.log.file.rotation.max-file-size" (include "polaris.quantity" .Values.logging.file.rotation.maxFileSize) -}}
    {{- $_ = set $map "quarkus.log.file.rotation.max-backup-index" .Values.logging.file.rotation.maxBackupIndex -}}
    {{- if .Values.logging.file.rotation.fileSuffix -}}
    {{- $_ = set $map "quarkus.log.file.rotation.file-suffix" .Values.logging.file.rotation.fileSuffix -}}
    {{- end -}}
    {{- if .Values.logging.file.json -}}
    {{- $_ = set $map "quarkus.log.file.json" "true" -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.log.file.format" .Values.logging.file.format -}}
    {{- end -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.log.file.enable" "false" -}}
    {{- end -}}
    {{- $categories := dict -}}
    {{- list .Values.logging.categories "" $categories | include "polaris.mergeConfigTree" -}}
    {{- range $k, $v := $categories -}}
    {{- $_ = set $map (printf "quarkus.log.category.\"%s\".level" $k) $v -}}
    {{- end -}}
    {{- $_ = set $map "polaris.log.request-id-header-name" .Values.logging.requestIdHeaderName -}}
    {{- $mdc := dict -}}
    {{- list .Values.logging.mdc "" $mdc | include "polaris.mergeConfigTree" -}}
    {{- range $k, $v := $mdc -}}
    {{- $_ = set $map (printf "polaris.log.mdc.\"%s\"" $k) $v -}}
    {{- end -}}

    {{- /* Telemetry */ -}}
    {{- if .Values.tracing.enabled -}}
    {{- $_ = set $map "quarkus.otel.exporter.otlp.endpoint" .Values.tracing.endpoint -}}
    {{- if .Values.tracing.attributes -}}
    {{- $attributes := dict -}}
    {{- list .Values.tracing.attributes "" $attributes | include "polaris.mergeConfigTree" -}}
    {{- $i := 0 -}}
    {{- range $k, $v := $attributes -}}
    {{- $_ = set $map (printf "quarkus.otel.resource.attributes[%d]" $i) (printf "%s=%s" $k $v) -}}
    {{- $i = add1 $i -}}
    {{- end -}}
    {{- end -}}
    {{- if .Values.tracing.sample -}}
    {{- $sample := toString .Values.tracing.sample -}}
    {{ if eq $sample "all" -}}
    {{- $_ = set $map "quarkus.otel.traces.sampler" "parentbased_always_on" -}}
    {{- else if eq $sample "none" -}}
    {{- $_ = set $map "quarkus.otel.traces.sampler" "always_off" -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.otel.traces.sampler" "parentbased_traceidratio" -}}
    {{- $_ = set $map "quarkus.otel.traces.sampler.arg" $sample -}}
    {{- end -}}
    {{- end -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.otel.sdk.disabled" true -}}
    {{- end -}}

    {{- /* Metrics */ -}}
    {{- if .Values.metrics.enabled -}}
    {{- range $name, $value := .Values.metrics.tags -}}
    {{- $_ = set $map (print "polaris.metrics.tags." $name) $value -}}
    {{- end -}}
    {{- else -}}
    {{- $_ = set $map "quarkus.micrometer.enabled" "false" -}}
    {{- end -}}

    {{- /* Advanced Configuration (must be done last since it can override any of the settings above) */ -}}
    {{- list .Values.advancedConfig "" $map | include "polaris.mergeConfigTree" -}}

    {{- /* Print the resulting configmap; each configuration option is templatized */ -}}
    {{- range $k, $v := $map }}
    {{ include "polaris.appendConfigOption" (list $k $v $global) }}
    {{- end }}
