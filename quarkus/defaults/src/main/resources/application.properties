#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# ---- Build-time configuration ----
# Build-time properties take effect when Quarkus processes java classes
# and creates Polaris jars. These properties cannot be overriden in runtime.
# Cf. https://quarkus.io/guides/all-config

quarkus.banner.path=/org/apache/polaris/service/banner.txt
quarkus.http.auth.basic=false
quarkus.http.enable-compression=true
quarkus.http.enable-decompression=true
quarkus.http.compress-media-types=application/json,text/html,text/plain
quarkus.management.enabled=true
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.otel.enabled=true

# ---- Runtime Configuration ----
# Below are default values for properties that can be changed in runtime.

quarkus.config.mapping.validate-unknown=true

quarkus.http.access-log.enabled=true
# quarkus.http.access-log.pattern=common
quarkus.http.body.handle-file-uploads=false
quarkus.http.limits.max-body-size=10240K

quarkus.http.cors.origins=http://localhost:8080
quarkus.http.cors.methods=PATCH, POST, DELETE, GET, PUT
quarkus.http.cors.headers=*
quarkus.http.cors.exposed-headers=*
quarkus.http.cors.access-control-max-age=PT10M
quarkus.http.cors.access-control-allow-credentials=true

quarkus.http.port=8181
quarkus.http.test-port=0

quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.level=ALL
quarkus.log.console.json=false
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] [%X{requestId},%X{realmId}] [%X{traceId},%X{parentId},%X{spanId},%X{sampled}] (%t) %s%e%n
quarkus.log.file.enable=true
quarkus.log.file.level=ALL
quarkus.log.file.json=false
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] [%X{requestId},%X{realmId}] [%X{traceId},%X{parentId},%X{spanId},%X{sampled}] (%t) %s%e%n
quarkus.log.file.path=./logs/polaris.log
quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd.gz
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=14
quarkus.log.category."org.apache.polaris".level=INFO
quarkus.log.category."org.apache.iceberg.rest".level=INFO
quarkus.log.category."io.smallrye.config".level=INFO

quarkus.management.port=8182
quarkus.management.test-port=0

# quarkus.otel.sdk.disabled is set to `true` by default to avoid spuriour errors about
# trace collector connections being impossible to establish. This setting can be enabled
# at runtime after configuring other OTel properties for proper trace data collection.
quarkus.otel.sdk.disabled=true
# quarkus.otel.exporter.otlp.endpoint=http://otlp-collector:4317
# quarkus.otel.resource.attributes=service.name=polaris,deployment.env=prod,region=us-west-2
# quarkus.otel.service.name=polaris
# quarkus.otel.traces.sampler=parentbased_always_on
# quarkus.otel.traces.sampler.arg=1.0d

quarkus.test.integration-test-profile=it

polaris.realm-context.type=default
polaris.realm-context.realms=POLARIS
polaris.realm-context.header-name=Polaris-Realm
polaris.realm-context.require-header=false

polaris.features.defaults."ENFORCE_PRINCIPAL_CREDENTIAL_ROTATION_REQUIRED_CHECKING"=false
polaris.features.defaults."SUPPORTED_CATALOG_STORAGE_TYPES"=["S3","GCS","AZURE","FILE"]
# realm overrides
# polaris.features.realm-overrides."my-realm"."INITIALIZE_DEFAULT_CATALOG_FILEIO_FOR_TEST"=true
# polaris.features.realm-overrides."my-realm"."SKIP_CREDENTIAL_SUBSCOPING_INDIRECTION"=true

polaris.persistence.type=in-memory

polaris.file-io.type=default

polaris.log.request-id-header-name=Polaris-Request-Id
# polaris.log.mdc.aid=polaris
# polaris.log.mdc.sid=polaris-service

polaris.metrics.tags.application=Polaris
# polaris.metrics.tags.service=polaris
# polaris.metrics.tags.environment=prod
# polaris.metrics.tags.region=us-west-2

# polaris.tasks.max-concurrent-tasks=100
# polaris.tasks.max-queued-tasks=1000

polaris.rate-limiter.filter.type=no-op
polaris.rate-limiter.token-bucket.type=default
polaris.rate-limiter.token-bucket.requests-per-second=9999
polaris.rate-limiter.token-bucket.window=PT10S

polaris.authentication.authenticator.type=default
polaris.authentication.token-service.type=default
polaris.authentication.token-broker.type=rsa-key-pair
polaris.authentication.token-broker.max-token-generation=PT1H
# polaris.authentication.token-broker.rsa-key-pair.public-key-file=/tmp/public.key
# polaris.authentication.token-broker.rsa-key-pair.private-key-file=/tmp/private.key
# polaris.authentication.token-broker.symmetric-key.secret=secret
# polaris.authentication.token-broker.symmetric-key.file=/tmp/symmetric.key

# If the following properties are unset, the default credential provider chain will be used
# polaris.storage.aws.access-key=accessKey
# polaris.storage.aws.secret-key=secretKey
# polaris.storage.gcp.token=token
# polaris.storage.gcp.lifespan=PT1H
