#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.

services:
  # SVN Server with authentication
  svn:
    image: elleflorio/svn-server
    container_name: svn
    network_mode: host
    environment:
      - SVN_REPONAME=${SVN_REPONAME}
    healthcheck:
      test: ["CMD", "pgrep", "svnserve"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  # Configuration service to set up SVN user and repository
  svn-config:
    image: alpine:latest
    container_name: svn-config
    network_mode: host
    depends_on:
      svn:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: sh -c "
      apk add --no-cache docker-cli &&
      docker exec -t svn svnadmin create /home/svn/$$SVN_REPONAME &&
      docker exec -t svn htpasswd -b /etc/subversion/passwd $$TEST_USERNAME $$TEST_PASSWORD &&
      docker exec -t svn sh -c \"echo '$$TEST_USERNAME = $$TEST_PASSWORD' >> /home/svn/$$SVN_REPONAME/conf/passwd\" &&
      docker exec -t svn sed -i 's/# password-db = passwd/password-db = passwd/' /home/svn/$$SVN_REPONAME/conf/svnserve.conf &&
      docker exec -t svn sed -i 's/# anon-access = read/anon-access = read/' /home/svn/$$SVN_REPONAME/conf/svnserve.conf &&
      docker exec -t svn sed -i 's/# auth-access = write/auth-access = write/' /home/svn/$$SVN_REPONAME/conf/svnserve.conf &&
      docker restart svn"
    environment:
      - TEST_USERNAME=${TEST_USERNAME}
      - TEST_PASSWORD=${TEST_PASSWORD}
      - SVN_REPONAME=${SVN_REPONAME}


  # Nexus Repository Manager
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8082:8081"  # Expose on different port, nginx will proxy 8081
    environment:
      - NEXUS_SECURITY_RANDOMPASSWORD=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/service/rest/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx proxy to rewrite URLs to match Apache Nexus patterns
  nginx:
    image: nginx:alpine
    container_name: nexus-proxy
    network_mode: host
    depends_on:
      nexus:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/service/rest/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  # Configuration service to set up Nexus user
  nexus-config:
    image: alpine:latest
    container_name: nexus-config
    network_mode: host
    depends_on:
      nginx:
        condition: service_healthy
    volumes:
      - ./nexus-setup.sh:/setup.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NEXUS_URL=${NEXUS_URL}
      - TEST_USERNAME=${TEST_USERNAME}
      - TEST_PASSWORD=${TEST_PASSWORD}
    command: ["/bin/sh", "/setup.sh"]