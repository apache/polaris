# coding: utf-8

"""
    Polaris Management Service

    Defines the management APIs for using Polaris to create and manage Iceberg catalogs and their principals

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from polaris.management.models.storage_config_info import StorageConfigInfo

class TestStorageConfigInfo(unittest.TestCase):
    """StorageConfigInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageConfigInfo:
        """Test StorageConfigInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageConfigInfo`
        """
        model = StorageConfigInfo()
        if include_optional:
            return StorageConfigInfo(
                storage_type = 'S3',
                allowed_locations = For AWS [s3://bucketname/prefix/], for AZURE [abfss://container@storageaccount.blob.core.windows.net/prefix/], for GCP [gs://bucketname/prefix/]
            )
        else:
            return StorageConfigInfo(
                storage_type = 'S3',
        )
        """

    def testStorageConfigInfo(self):
        """Test StorageConfigInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
