# coding: utf-8

"""
    Apache Polaris and Apache Iceberg REST Catalog API

    Defines the specification for the Polaris Catalog API, which encompasses both the Iceberg REST Catalog API and Polaris-native API.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from polaris.catalog.models.create_table_request import CreateTableRequest

class TestCreateTableRequest(unittest.TestCase):
    """CreateTableRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateTableRequest:
        """Test CreateTableRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateTableRequest`
        """
        model = CreateTableRequest()
        if include_optional:
            return CreateTableRequest(
                name = '',
                location = '',
                var_schema = None,
                partition_spec = polaris.catalog.models.partition_spec.PartitionSpec(
                    spec_id = 56, 
                    fields = [
                        polaris.catalog.models.partition_field.PartitionField(
                            field_id = 56, 
                            source_id = 56, 
                            name = '', 
                            transform = '["identity","year","month","day","hour","bucket[256]","truncate[16]"]', )
                        ], ),
                write_order = polaris.catalog.models.sort_order.SortOrder(
                    order_id = 56, 
                    fields = [
                        polaris.catalog.models.sort_field.SortField(
                            source_id = 56, 
                            transform = '["identity","year","month","day","hour","bucket[256]","truncate[16]"]', 
                            direction = 'asc', 
                            null_order = 'nulls-first', )
                        ], ),
                stage_create = True,
                properties = {
                    'key' : ''
                    }
            )
        else:
            return CreateTableRequest(
                name = '',
                var_schema = None,
        )
        """

    def testCreateTableRequest(self):
        """Test CreateTableRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
