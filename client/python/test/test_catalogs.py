# coding: utf-8

"""
    Polaris Management Service

    Defines the management APIs for using Polaris to create and manage Iceberg catalogs and their principals

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from polaris.management.models.catalogs import Catalogs

class TestCatalogs(unittest.TestCase):
    """Catalogs unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Catalogs:
        """Test Catalogs
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Catalogs`
        """
        model = Catalogs()
        if include_optional:
            return Catalogs(
                catalogs = [
                    polaris.management.models.catalog.Catalog(
                        type = 'INTERNAL', 
                        name = 'k&*h<4<U/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU0', 
                        properties = {
                            'key' : ''
                            }, 
                        create_timestamp = 56, 
                        last_update_timestamp = 56, 
                        entity_version = 56, 
                        storage_config_info = polaris.management.models.storage_config_info.StorageConfigInfo(
                            storage_type = 'S3', 
                            allowed_locations = For AWS [s3://bucketname/prefix/], for AZURE [abfss://container@storageaccount.blob.core.windows.net/prefix/], for GCP [gs://bucketname/prefix/], ), )
                    ]
            )
        else:
            return Catalogs(
                catalogs = [
                    polaris.management.models.catalog.Catalog(
                        type = 'INTERNAL', 
                        name = 'k&*h<4<U/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU0', 
                        properties = {
                            'key' : ''
                            }, 
                        create_timestamp = 56, 
                        last_update_timestamp = 56, 
                        entity_version = 56, 
                        storage_config_info = polaris.management.models.storage_config_info.StorageConfigInfo(
                            storage_type = 'S3', 
                            allowed_locations = For AWS [s3://bucketname/prefix/], for AZURE [abfss://container@storageaccount.blob.core.windows.net/prefix/], for GCP [gs://bucketname/prefix/], ), )
                    ],
        )
        """

    def testCatalogs(self):
        """Test Catalogs"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
