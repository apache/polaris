Creating catalog with fine-grained authorization enabled...
Creating principal and roles...
Principal created with client ID: __CLIENT_ID__
Granting basic privileges needed for setup...
{"defaults":{"drop-with-purge.enabled":"true","default-base-location":"file:///tmp/spark_sql_fine_grained_catalog"},"overrides":{"prefix":"spark_sql_fine_grained_catalog"},"endpoints":["GET /v1/{prefix}/namespaces","GET /v1/{prefix}/namespaces/{namespace}","HEAD /v1/{prefix}/namespaces/{namespace}","POST /v1/{prefix}/namespaces","POST /v1/{prefix}/namespaces/{namespace}/properties","DELETE /v1/{prefix}/namespaces/{namespace}","GET /v1/{prefix}/namespaces/{namespace}/tables","GET /v1/{prefix}/namespaces/{namespace}/tables/{table}","HEAD /v1/{prefix}/namespaces/{namespace}/tables/{table}","POST /v1/{prefix}/namespaces/{namespace}/tables","POST /v1/{prefix}/namespaces/{namespace}/tables/{table}","DELETE /v1/{prefix}/namespaces/{namespace}/tables/{table}","POST /v1/{prefix}/tables/rename","POST /v1/{prefix}/namespaces/{namespace}/register","POST /v1/{prefix}/namespaces/{namespace}/tables/{table}/metrics","POST /v1/{prefix}/transactions/commit","GET /v1/{prefix}/namespaces/{namespace}/views","GET /v1/{prefix}/namespaces/{namespace}/views/{view}","HEAD /v1/{prefix}/namespaces/{namespace}/views/{view}","POST /v1/{prefix}/namespaces/{namespace}/views","POST /v1/{prefix}/namespaces/{namespace}/views/{view}","DELETE /v1/{prefix}/namespaces/{namespace}/views/{view}","POST /v1/{prefix}/views/rename","POST /v1/{prefix}/transactions/commit","GET polaris/v1/{prefix}/namespaces/{namespace}/generic-tables","POST polaris/v1/{prefix}/namespaces/{namespace}/generic-tables","DELETE polaris/v1/{prefix}/namespaces/{namespace}/generic-tables/{generic-table}","GET polaris/v1/{prefix}/namespaces/{namespace}/generic-tables/{generic-table}","GET /polaris/v1/{prefix}/namespaces/{namespace}/policies","POST /polaris/v1/{prefix}/namespaces/{namespace}/policies","GET /polaris/v1/{prefix}/namespaces/{namespace}/policies/{policy-name}","PUT /polaris/v1/{prefix}/namespaces/{namespace}/policies/{policy-name}","DELETE /polaris/v1/{prefix}/namespaces/{namespace}/policies/{policy-name}","PUT /polaris/v1/{prefix}/namespaces/{namespace}/policies/{policy-name}/mappings","POST /polaris/v1/{prefix}/namespaces/{namespace}/policies/{policy-name}/mappings","GET /polaris/v1/{prefix}/applicable-policies"]}
Catalog created with fine-grained authorization enabled
Testing coarse-grained TABLE_WRITE_PROPERTIES privilege (should work for all operations)...
spark-sql (default)> use polaris;
spark-sql ()> create namespace db1;
spark-sql ()> create table db1.test_table (col1 int, col2 string);
spark-sql ()> 
            > -- These operations should all work with TABLE_WRITE_PROPERTIES
            > alter table db1.test_table set tblproperties ('test.property' = 'test.value');
spark-sql ()> alter table db1.test_table unset tblproperties ('test.property');
spark-sql ()> 
            > drop table db1.test_table purge;
spark-sql ()> drop namespace db1;
spark-sql ()> Coarse-grained privilege test completed successfully
Testing fine-grained privileges...
Testing TABLE_SET_PROPERTIES privilege...
spark-sql (default)> use polaris;
spark-sql ()> create namespace db1;
spark-sql ()> create table db1.test_table (col1 int, col2 string);
spark-sql ()> 
            > -- This should work with TABLE_SET_PROPERTIES
            > alter table db1.test_table set tblproperties ('test.property' = 'test.value');
spark-sql ()> SET_PROPERTIES test completed
Testing that UNSET_PROPERTIES fails without TABLE_REMOVE_PROPERTIES...
spark-sql (default)> use polaris;
spark-sql ()> -- This should fail
spark-sql ()> alter table db1.test_table unset tblproperties ('test.property');
spark-sql ()> Expected failure: missing TABLE_REMOVE_PROPERTIES privilege
Testing TABLE_REMOVE_PROPERTIES privilege...
spark-sql (default)> use polaris;
spark-sql ()> -- This should now work
spark-sql ()> alter table db1.test_table unset tblproperties ('test.property');
spark-sql ()> 
            > drop table db1.test_table purge;
spark-sql ()> drop namespace db1;
spark-sql ()> REMOVE_PROPERTIES test completed
Testing multiple fine-grained privileges together...
spark-sql (default)> use polaris;
spark-sql ()> create namespace db1;
spark-sql ()> create table db1.test_table (col1 int, col2 string);
spark-sql ()> 
            > -- Both operations should work since we have both privileges
            > alter table db1.test_table set tblproperties ('prop1' = 'value1', 'prop2' = 'value2');
spark-sql ()> alter table db1.test_table unset tblproperties ('prop1');
spark-sql ()> 
            > drop table db1.test_table purge;
spark-sql ()> drop namespace db1;
spark-sql ()> Multiple fine-grained privileges test completed
Cleaning up...
Fine-grained authorization test completed successfully!
